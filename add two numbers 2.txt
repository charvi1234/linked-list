/* https://leetcode.com/problems/add-two-numbers-ii/ */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> stk1 = new Stack<>();
        Stack<Integer> stk2 = new Stack<>();
        ListNode ptr = l1;
        while(ptr != null)
        {
            stk1.push(ptr.val);
            ptr = ptr.next;
        }
        ptr = l2;
        while(ptr != null)
        {
            stk2.push(ptr.val);
            ptr = ptr.next;
        }
        int carry = 0;
        ListNode dummyHead = new ListNode(0, null);
        ptr = null;
        int flag = 0;
        while(!stk1.isEmpty() || !stk2.isEmpty())
        {
            int node1 = 0;
            int node2 = 0;
            if(!stk1.isEmpty())
                node1 = stk1.pop();
            if(!stk2.isEmpty())
                node2 = stk2.pop();
            int value = node1 + node2 + carry;
            if(value >= 10)
            {
                carry = value/10;
                value = value%10;
            }
            else
            {
                carry = 0;
            }
            ListNode newNode = new ListNode(value);
            dummyHead.next = newNode;
            newNode.next = ptr;
            ptr = newNode;
        }
        if(carry == 1)
        {
            ListNode newNode = new ListNode(carry);
            dummyHead.next = newNode;
            newNode.next = ptr;
        }
        return dummyHead.next;
    }
}